<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd">
    <import resource="spring-servlet.xml"/>

    <security:global-method-security secured-annotations="enabled"/>

    <security:http
            auto-config="true"
            use-expressions="true"
            create-session="stateless"
            entry-point-ref="jwtAuthenticationEntryPoint"
            authentication-manager-ref="authenticationManager">

        <security:csrf disabled="true"/>

        <security:custom-filter ref="customJwtAuthenticationFilter" after="BASIC_AUTH_FILTER"/>

        <security:intercept-url pattern="/login" access="permitAll()"/>
        <security:intercept-url pattern="/authenticate" access="permitAll()"/>
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>

        <security:intercept-url pattern="/private" access="hasAuthority('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/public" access="hasAnyAuthority('ROLE_USER','ROLE_ADMIN')"/>

        <security:access-denied-handler error-page="/403"/>

        <security:form-login
                login-page="/login"
                login-processing-url="/login"
                username-parameter="username"
                password-parameter="password"
                default-target-url="/"/>

        <security:logout logout-url="jsp/logout.jsp"/>
    </security:http>

    <bean id="jwtAuthenticationEntryPoint" class="Config.JwtAuthenticationEntryPoint"/>

    <bean id="jwtUtil" class="Config.JwtUtil">
    </bean>

    <bean id="customUserDetailsService" class="Service.CustomUserDetailsService">
        <constructor-arg ref="userDAO" name="userDAO"/>
    </bean>


    <bean id="customJwtAuthenticationFilter" class="Config.CustomJwtAuthenticationFilter">
        <constructor-arg ref="jwtUtil" name="jwtTokenUtil"/>
    </bean>

    <bean id="authenticationController" class="Controller.AuthenticationController">
        <constructor-arg ref="jwtUtil" name="jwtUtil"/>
        <constructor-arg ref="customUserDetailsService" name="userDetailsService"/>
        <constructor-arg ref="authenticationManager" name="authenticationManager"/>
    </bean>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"
          factory-method="getInstance"/>

<!--    <security:authentication-manager>-->
<!--    <security:authentication-provider>-->
<!--    <security:jdbc-user-service data-source-ref="dataSource"-->
<!--                                users-by-username-query="select name, password, enabled from USERDATA where name=?"-->
<!--                                authorities-by-username-query="Select name, authority from AUTHORITIES where name=?"/>-->
<!--    <security:password-encoder ref="passwordEncoder"/>-->
<!--    </security:authentication-provider>-->
<!--    </security:authentication-manager>-->


    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="customUserDetailsService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>


</beans>